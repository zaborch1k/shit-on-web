
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSCALL DEDENT DIVIDE DOWN ENDIF ENDPROC ENDREPEAT EQUALS ID IFBLOCK INDENT LEFT LPAREN MINUS NEWLINE NUMBER PLUS PROCEDURE REPEAT RIGHT RPAREN SET TIMES UP WSprogram : program statement\n               | statement\n               | block : NEWLINE INDENT groupstat DEDENTgroupstat : groupstat statement\n                 | statement : command NEWLINEcommand : IFBLOCK RIGHT block ENDIF\n               | IFBLOCK DOWN block ENDIF\n               | IFBLOCK UP block ENDIF\n               | IFBLOCK LEFT block ENDIFcommand : IFBLOCK error block ENDIF\n               | IFBLOCK error groupstat ENDIFcommand : IFBLOCK RIGHT error groupstat ENDIF\n               | IFBLOCK DOWN error groupstat ENDIF\n               | IFBLOCK UP error groupstat ENDIF\n               | IFBLOCK LEFT errorcommand : REPEAT expr block ENDREPEATcommand : REPEAT error block ENDREPEAT\n               | REPEAT error groupstat ENDREPEATcommand : REPEAT expr error groupstat ENDREPEATcommand : PROCEDURE ID block ENDPROCcommand : PROCEDURE error block ENDPROC\n               | PROCEDURE error groupstat ENDPROC command : PROCEDURE ID error groupstat ENDPROCcommand : CALL IDcommand : CALL errorcommand : RIGHT expr\n               | LEFT expr\n               | UP expr\n               | DOWN exprcommand : RIGHT error\n               | LEFT error\n               | UP error\n               | DOWN errorcommand : SET ID EQUALS exprcommand : SET errorcommand : SET ID errorcommand : SET ID EQUALS errorexpr : expr PLUS factor\n            | expr MINUS factor\n            | factorexpr : MINUS expr %prec UMINUSfactor : factor TIMES fact\n              | factor DIVIDE fact\n              | factfact : NUMBERfact : IDfact : LPAREN expr RPAREN'
    
_lr_action_items = {'IFBLOCK':([0,1,2,13,14,19,35,37,43,46,48,52,60,62,64,66,70,71,73,75,79,86,90,96,],[4,4,-2,-1,-7,-6,-6,-6,-6,-6,-6,4,-6,4,-6,4,4,-6,4,4,-5,4,4,4,]),'REPEAT':([0,1,2,13,14,19,35,37,43,46,48,52,60,62,64,66,70,71,73,75,79,86,90,96,],[9,9,-2,-1,-7,-6,-6,-6,-6,-6,-6,9,-6,9,-6,9,9,-6,9,9,-5,9,9,9,]),'PROCEDURE':([0,1,2,13,14,19,35,37,43,46,48,52,60,62,64,66,70,71,73,75,79,86,90,96,],[10,10,-2,-1,-7,-6,-6,-6,-6,-6,-6,10,-6,10,-6,10,10,-6,10,10,-5,10,10,10,]),'CALL':([0,1,2,13,14,19,35,37,43,46,48,52,60,62,64,66,70,71,73,75,79,86,90,96,],[11,11,-2,-1,-7,-6,-6,-6,-6,-6,-6,11,-6,11,-6,11,11,-6,11,11,-5,11,11,11,]),'RIGHT':([0,1,2,4,13,14,19,35,37,43,46,48,52,60,62,64,66,70,71,73,75,79,86,90,96,],[5,5,-2,15,-1,-7,-6,-6,-6,-6,-6,-6,5,-6,5,-6,5,5,-6,5,5,-5,5,5,5,]),'LEFT':([0,1,2,4,13,14,19,35,37,43,46,48,52,60,62,64,66,70,71,73,75,79,86,90,96,],[8,8,-2,18,-1,-7,-6,-6,-6,-6,-6,-6,8,-6,8,-6,8,8,-6,8,8,-5,8,8,8,]),'UP':([0,1,2,4,13,14,19,35,37,43,46,48,52,60,62,64,66,70,71,73,75,79,86,90,96,],[7,7,-2,17,-1,-7,-6,-6,-6,-6,-6,-6,7,-6,7,-6,7,7,-6,7,7,-5,7,7,7,]),'DOWN':([0,1,2,4,13,14,19,35,37,43,46,48,52,60,62,64,66,70,71,73,75,79,86,90,96,],[6,6,-2,16,-1,-7,-6,-6,-6,-6,-6,-6,6,-6,6,-6,6,6,-6,6,6,-5,6,6,6,]),'SET':([0,1,2,13,14,19,35,37,43,46,48,52,60,62,64,66,70,71,73,75,79,86,90,96,],[12,12,-2,-1,-7,-6,-6,-6,-6,-6,-6,12,-6,12,-6,12,12,-6,12,12,-5,12,12,12,]),'$end':([0,1,2,13,14,],[-3,0,-2,-1,-7,]),'NEWLINE':([3,15,16,17,18,19,20,21,22,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,41,50,57,68,69,72,74,76,77,78,80,81,82,83,84,85,87,88,89,91,92,93,94,95,97,98,99,100,],[14,44,44,44,44,44,-28,-32,-42,-46,-47,-48,-31,-35,-30,-34,-29,-33,44,44,44,44,-26,-27,-37,-17,-43,-38,-8,-9,-10,-11,-12,-13,-40,-41,-44,-45,-49,-18,-19,-20,-22,-23,-24,-36,-39,-14,-15,-16,-21,-25,]),'error':([4,5,6,7,8,9,10,11,12,15,16,17,18,22,24,25,26,34,36,40,57,67,80,81,82,83,84,],[19,21,29,31,33,35,37,39,41,43,46,48,50,-42,-46,-47,-48,60,64,68,-43,94,-40,-41,-44,-45,-49,]),'MINUS':([5,6,7,8,9,20,22,23,24,25,26,27,28,30,32,34,57,58,67,80,81,82,83,84,93,],[23,23,23,23,23,54,-42,23,-46,-47,-48,23,54,54,54,54,-43,54,23,-40,-41,-44,-45,-49,54,]),'NUMBER':([5,6,7,8,9,23,27,53,54,55,56,67,],[25,25,25,25,25,25,25,25,25,25,25,25,]),'ID':([5,6,7,8,9,10,11,12,23,27,53,54,55,56,67,],[26,26,26,26,26,36,38,40,26,26,26,26,26,26,26,]),'LPAREN':([5,6,7,8,9,23,27,53,54,55,56,67,],[27,27,27,27,27,27,27,27,27,27,27,27,]),'ENDIF':([14,19,42,43,45,46,47,48,49,51,52,70,73,75,79,101,],[-7,-6,69,-6,72,-6,74,-6,76,77,78,95,97,98,-5,-4,]),'ENDREPEAT':([14,35,59,60,61,62,79,86,101,],[-7,-6,85,-6,87,88,-5,99,-4,]),'ENDPROC':([14,37,63,64,65,66,79,90,101,],[-7,-6,89,-6,91,92,-5,100,-4,]),'DEDENT':([14,71,79,96,],[-7,-6,-5,101,]),'PLUS':([20,22,24,25,26,28,30,32,34,57,58,80,81,82,83,84,93,],[53,-42,-46,-47,-48,53,53,53,53,-43,53,-40,-41,-44,-45,-49,53,]),'RPAREN':([22,24,25,26,57,58,80,81,82,83,84,],[-42,-46,-47,-48,-43,84,-40,-41,-44,-45,-49,]),'TIMES':([22,24,25,26,80,81,82,83,84,],[55,-46,-47,-48,55,55,-44,-45,-49,]),'DIVIDE':([22,24,25,26,80,81,82,83,84,],[56,-46,-47,-48,56,56,-44,-45,-49,]),'EQUALS':([40,],[67,]),'INDENT':([44,],[71,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,1,52,62,66,70,73,75,86,90,96,],[2,13,79,79,79,79,79,79,79,79,79,]),'command':([0,1,52,62,66,70,73,75,86,90,96,],[3,3,3,3,3,3,3,3,3,3,3,]),'expr':([5,6,7,8,9,23,27,67,],[20,28,30,32,34,57,58,93,]),'factor':([5,6,7,8,9,23,27,53,54,67,],[22,22,22,22,22,22,22,80,81,22,]),'fact':([5,6,7,8,9,23,27,53,54,55,56,67,],[24,24,24,24,24,24,24,24,24,82,83,24,]),'block':([15,16,17,18,19,34,35,36,37,],[42,45,47,49,51,59,61,63,65,]),'groupstat':([19,35,37,43,46,48,60,64,71,],[52,62,66,70,73,75,86,90,96,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program statement','program',2,'p_program','lexparse.py',178),
  ('program -> statement','program',1,'p_program','lexparse.py',179),
  ('program -> <empty>','program',0,'p_program','lexparse.py',180),
  ('block -> NEWLINE INDENT groupstat DEDENT','block',4,'p_block','lexparse.py',192),
  ('groupstat -> groupstat statement','groupstat',2,'p_groupstat','lexparse.py',196),
  ('groupstat -> <empty>','groupstat',0,'p_groupstat','lexparse.py',197),
  ('statement -> command NEWLINE','statement',2,'p_statement','lexparse.py',211),
  ('command -> IFBLOCK RIGHT block ENDIF','command',4,'p_command_ifblock','lexparse.py',216),
  ('command -> IFBLOCK DOWN block ENDIF','command',4,'p_command_ifblock','lexparse.py',217),
  ('command -> IFBLOCK UP block ENDIF','command',4,'p_command_ifblock','lexparse.py',218),
  ('command -> IFBLOCK LEFT block ENDIF','command',4,'p_command_ifblock','lexparse.py',219),
  ('command -> IFBLOCK error block ENDIF','command',4,'p_command_ifblock_error','lexparse.py',229),
  ('command -> IFBLOCK error groupstat ENDIF','command',4,'p_command_ifblock_error','lexparse.py',230),
  ('command -> IFBLOCK RIGHT error groupstat ENDIF','command',5,'p_command_ifblock_error1','lexparse.py',238),
  ('command -> IFBLOCK DOWN error groupstat ENDIF','command',5,'p_command_ifblock_error1','lexparse.py',239),
  ('command -> IFBLOCK UP error groupstat ENDIF','command',5,'p_command_ifblock_error1','lexparse.py',240),
  ('command -> IFBLOCK LEFT error','command',3,'p_command_ifblock_error1','lexparse.py',241),
  ('command -> REPEAT expr block ENDREPEAT','command',4,'p_command_repeat','lexparse.py',252),
  ('command -> REPEAT error block ENDREPEAT','command',4,'p_command_repeat_error','lexparse.py',262),
  ('command -> REPEAT error groupstat ENDREPEAT','command',4,'p_command_repeat_error','lexparse.py',263),
  ('command -> REPEAT expr error groupstat ENDREPEAT','command',5,'p_command_repeat_error1','lexparse.py',271),
  ('command -> PROCEDURE ID block ENDPROC','command',4,'p_command_procedure','lexparse.py',282),
  ('command -> PROCEDURE error block ENDPROC','command',4,'p_command_procedure_error','lexparse.py',292),
  ('command -> PROCEDURE error groupstat ENDPROC','command',4,'p_command_procedure_error','lexparse.py',293),
  ('command -> PROCEDURE ID error groupstat ENDPROC','command',5,'p_command_procedure_error1','lexparse.py',301),
  ('command -> CALL ID','command',2,'p_command_call','lexparse.py',312),
  ('command -> CALL error','command',2,'p_command_call_error','lexparse.py',316),
  ('command -> RIGHT expr','command',2,'p_command_dir','lexparse.py',325),
  ('command -> LEFT expr','command',2,'p_command_dir','lexparse.py',326),
  ('command -> UP expr','command',2,'p_command_dir','lexparse.py',327),
  ('command -> DOWN expr','command',2,'p_command_dir','lexparse.py',328),
  ('command -> RIGHT error','command',2,'p_command_dir_error','lexparse.py',332),
  ('command -> LEFT error','command',2,'p_command_dir_error','lexparse.py',333),
  ('command -> UP error','command',2,'p_command_dir_error','lexparse.py',334),
  ('command -> DOWN error','command',2,'p_command_dir_error','lexparse.py',335),
  ('command -> SET ID EQUALS expr','command',4,'p_command_set','lexparse.py',346),
  ('command -> SET error','command',2,'p_command_set_error','lexparse.py',351),
  ('command -> SET ID error','command',3,'p_command_set_error2','lexparse.py',359),
  ('command -> SET ID EQUALS error','command',4,'p_command_set_error3','lexparse.py',364),
  ('expr -> expr PLUS factor','expr',3,'p_expr','lexparse.py',373),
  ('expr -> expr MINUS factor','expr',3,'p_expr','lexparse.py',374),
  ('expr -> factor','expr',1,'p_expr','lexparse.py',375),
  ('expr -> MINUS expr','expr',2,'p_expr_uminus','lexparse.py',382),
  ('factor -> factor TIMES fact','factor',3,'p_factor','lexparse.py',386),
  ('factor -> factor DIVIDE fact','factor',3,'p_factor','lexparse.py',387),
  ('factor -> fact','factor',1,'p_factor','lexparse.py',388),
  ('fact -> NUMBER','fact',1,'p_fact_number','lexparse.py',396),
  ('fact -> ID','fact',1,'p_fact_var','lexparse.py',400),
  ('fact -> LPAREN expr RPAREN','fact',3,'p_fact_paren','lexparse.py',404),
]
